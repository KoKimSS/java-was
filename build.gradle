plugins {
    id 'java'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'codesquad.Main'
        )
    }
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

group = 'codesquad'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation("org.assertj:assertj-core:3.22.0")
    // Mockito
    testImplementation 'org.mockito:mockito-core:3.6.28'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.6.28'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.apache.httpcomponents:httpclient:4.5'

    //db
    // H2 Database JDBC Driver
    implementation 'com.h2database:h2:2.3.230' // 버전은 최신 버전으로 변경 가능
    testImplementation 'com.h2database:h2:2.3.230' // 버전은 최신 버전으로 변경 가능

    implementation 'mysql:mysql-connector-java:8.0.28'

    implementation 'org.slf4j:slf4j-api:2.0.6'
    implementation 'ch.qos.logback:logback-classic:1.4.5'
    
    // JSON 처리를 위한 Jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
}

test {
    useJUnitPlatform()
}
